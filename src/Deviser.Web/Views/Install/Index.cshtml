@model Deviser.Core.Common.DomainTypes.InstallModel


@{

    Layout = "_InstallLayout";

    ViewData["Title"] = "Installation";

}



<div class="card">
    <div class="card-body">
        <h4 class="card-title">Deviser Platform - Installation</h4>
        <form id="installForm" asp-action="Index">

            <div asp-validation-summary="ModelOnly" class="error-summary text-danger"></div>

            <div class="form-group row">

                <label asp-for="AdminEmail" class="col-4 col-form-label"></label>

                <div class="col">

                    <input asp-for="AdminEmail" class="form-control" />

                    <span asp-validation-for="AdminEmail" class="text-danger"></span>

                </div>

            </div>

            <div class="form-group row">

                <label asp-for="AdminPassword" class="col-4 col-form-label"></label>

                <div class="col">

                    <input asp-for="AdminPassword" class="form-control" />

                    <span asp-validation-for="AdminPassword" class="text-danger"></span>

                </div>

            </div>


            <div class="form-group row">

                <label asp-for="AdminConfirmPassword" class="col-4 col-form-label"></label>

                <div class="col">

                    <input asp-for="AdminConfirmPassword" class="form-control" />

                    <span asp-validation-for="AdminConfirmPassword" class="text-danger"></span>

                </div>

            </div>

            <div class="form-group row">

                <label asp-for="SiteName" class="col-4 col-form-label"></label>

                <div class="col">

                    <input asp-for="SiteName" class="form-control" />

                    <span asp-validation-for="SiteName" class="text-danger"></span>

                </div>

            </div>

            <div class="form-group row">

                <label asp-for="DatabaseProvider" class="col-4 col-form-label"></label>

                <div class="col">

                    <select asp-for="DatabaseProvider" class="form-control">

                        <option value="1">SQL Server LocalDb</option>

                        <option value="2">SQL Server</option>

                        <option value="3">SQLite</option>

                        <option value="4">PostgreSQL</option>

                        <option value="5">MySQL</option>

                    </select>

                </div>

            </div>

            <div id="fldServerName" class="form-group row connection-string">

                <label asp-for="ServerName" class="col-4 col-form-label"></label>

                <div class="col">

                    <input asp-for="ServerName" class="form-control" />

                    <span asp-validation-for="ServerName" class="text-danger"></span>

                </div>

            </div>

            <div id="fldDatabaseName" class="form-group row connection-string">

                <label asp-for="DatabaseName" class="col-4 col-form-label"></label>

                <div class="col">

                    <input asp-for="DatabaseName" class="form-control" />

                    <span asp-validation-for="DatabaseName" class="text-danger"></span>

                </div>

            </div>

            <div id="fldIsIntegratedSecurity" class="form-group row connection-string">

                <div class="offset-4 col">

                    <input asp-for="IsIntegratedSecurity" />

                    <label class="form-check-label" for="gridCheck1">

                        @Html.DisplayNameFor(t => t.IsIntegratedSecurity)

                    </label>

                    <span asp-validation-for="IsIntegratedSecurity" class="text-danger"></span>

                </div>

            </div>

            <div id="fldDBUserName" class="form-group row connection-string">

                <label asp-for="DBUserName" class="col-4 col-form-label"></label>

                <div class="col">

                    <input asp-for="DBUserName" class="form-control" />

                    <span asp-validation-for="DBUserName" class="text-danger"></span>

                </div>

            </div>

            <div id="fldDBPassword" class="form-group row connection-string">

                <label asp-for="DBPassword" class="col-4 col-form-label"></label>

                <div class="col">

                    <input asp-for="DBPassword" class="form-control" />

                    <span asp-validation-for="DBPassword" class="text-danger"></span>

                </div>

            </div>

            <div class="form-group row">

                <div class="offset-4 col">

                    <input asp-for="AcceptLicense" />

                    <label class="form-check-label" for="gridCheck1">

                        <a asp-action="Terms" target="_blank"> @Html.DisplayNameFor(t => t.AcceptLicense)</a>

                    </label>

                    <span asp-validation-for="AcceptLicense" class="text-danger"></span>

                </div>

            </div>

            <div class="form-group row">

                <div class="offset-4 col">

                    <input type="submit" value="Install" class="btn btn-deviser btn-install" />

                </div>

            </div>

        </form>
        <div class="install-progress-container">
            <div class="row">
                <div id="installProgressContent" class="col">
                    <div class="progress-title">
                        <svg version="1.1" id="L7" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve" style="
                                      width: 50px;
                                  ">
                            <path fill="#ec3d28" d="M31.6,3.5C5.9,13.6-6.6,42.7,3.5,68.4c10.1,25.7,39.2,38.3,64.9,28.1l-3.1-7.9c-21.3,8.4-45.4-2-53.8-23.3
  c-8.4-21.3,2-45.4,23.3-53.8L31.6,3.5z">
                                <animateTransform attributeName="transform" attributeType="XML" type="rotate" dur="2s" from="0 50 50" to="360 50 50" repeatCount="indefinite"></animateTransform>

                            </path>
                            <path fill="#ec3d28" d="M42.3,39.6c5.7-4.3,13.9-3.1,18.1,2.7c4.3,5.7,3.1,13.9-2.7,18.1l4.1,5.5c8.8-6.5,10.6-19,4.1-27.7
  c-6.5-8.8-19-10.6-27.7-4.1L42.3,39.6z">
                                <animateTransform attributeName="transform" attributeType="XML" type="rotate" dur="1s" from="0 50 50" to="-360 50 50" repeatCount="indefinite"></animateTransform>

                            </path>
                            <path fill="#f06453" d="M82,35.7C74.1,18,53.4,10.1,35.7,18S10.1,46.6,18,64.3l7.6-3.4c-6-13.5,0-29.3,13.5-35.3s29.3,0,35.3,13.5
  L82,35.7z">
                                <animateTransform attributeName="transform" attributeType="XML" type="rotate" dur="2s" from="0 50 50" to="360 50 50" repeatCount="indefinite"></animateTransform>

                            </path>
                        </svg>
                        <h5>Please wait, Deviser Platform is being installed...</h5>
                    </div>
                    <ul id="installSteps" class="install-steps">

                    </ul>
                </div>
            </div>

            <div class="row alert-row">
                <div class="col">
                    <span class="alert alert-danger error-summary" role="alert"></span>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="icons" style="display: none">
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#ec3d28" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check-square">
        <polyline points="9 11 12 14 22 4"></polyline><path d="M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11"></path>
    </svg>
    
    
    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="#ec3d28" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-chevron-right">
        <polyline points="9 18 15 12 9 6"></polyline>
    </svg>
</div>



@section Scripts {

    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}


    <script>

        var $alertRow = $('.alert-row'),
            $installForm = $('#installForm'),
            $inputDatabaseProvider = $('#DatabaseProvider'),
            $inputIsIntegratedSecurity = $('#IsIntegratedSecurity'),
            $inputAcceptLicense = $('#AcceptLicense'),
            $installProgressContainer = $('.install-progress-container');

        (function() {

            initSignalR();

            $(function() {
                $alertRow.hide();
                $installProgressContainer.hide();
                $inputDatabaseProvider.on('change', onDBProviderISChange);
                $inputIsIntegratedSecurity.on('change', onDBProviderISChange);
                changeDbProvider(parseInt($inputDatabaseProvider.val()), $inputIsIntegratedSecurity.prop('checked'));



                $inputAcceptLicense.rules("add",
                    {
                        required: true,

                        messages: {
                            required: "Accept the license to install.",

                        }

                    });
                $installForm.on('submit', formSubmit);
            });


            function onDBProviderISChange() {

                //console.log($inputDatabaseProvider.val());

                //console.log($inputIsIntegratedSecurity.prop('checked'));

                changeDbProvider(parseInt($inputDatabaseProvider.val()), $inputIsIntegratedSecurity.prop('checked'));

            }


            function changeDbProvider(dbProvider, isIntegratedSecurity) {


                var $inputServerName = $("#ServerName"),

                    $inputDatabaseName = $("#DatabaseName"),

                    $inputDBUserName = $("#DBUserName"),

                    $inputDBPassword = $("#DBPassword");


                //Hide all

                $('.connection-string').hide();


                //Remove all rules in connectionstring

                $inputServerName.rules("remove");

                $inputDatabaseName.rules("remove");

                $inputDBUserName.rules("remove");

                $inputDBPassword.rules("remove");


                if (dbProvider === 1) {

                    //SQL LocalDb

                    $('#fldServerName').show();

                    $('#fldDatabaseName').show();


                    $inputServerName.rules("add",
                        {
                            required: true,

                            messages: {
                                required: "The @Html.DisplayNameFor(t => t.ServerName) field is required.",

                            }

                        });


                    $inputDatabaseName.rules("add",
                        {
                            required: true,

                            messages: {
                                required: "The @Html.DisplayNameFor(t => t.DatabaseName) field is required.",

                            }

                        });

                } else if (dbProvider === 2) {

                    //SQL Server

                    $('#fldServerName').show();

                    $('#fldDatabaseName').show();

                    $('#fldIsIntegratedSecurity').show();


                    $inputServerName.rules("add",
                        {
                            required: true,

                            messages: {
                                required: "The @Html.DisplayNameFor(t => t.ServerName) field is required.",

                            }

                        });


                    $inputDatabaseName.rules("add",
                        {
                            required: true,

                            messages: {
                                required: "The @Html.DisplayNameFor(t => t.DatabaseName) field is required.",

                            }

                        });


                    if (isIntegratedSecurity === false) {

                        $('#fldDBUserName').show();

                        $('#fldDBPassword').show();


                        $inputDBUserName.rules("add",
                            {
                                required: true,

                                messages: {
                                    required: "The @Html.DisplayNameFor(t => t.DBUserName) field is required.",

                                }

                            });


                        $inputDBPassword.rules("add",
                            {
                                required: true,

                                messages: {
                                    required: "The @Html.DisplayNameFor(t => t.DBPassword) field is required.",

                                }

                            });

                    }

                } else if (dbProvider === 3) {

                    //SQLite

                    $('#fldDatabaseName').show();


                    $inputDatabaseName.rules("add",
                        {
                            required: true,

                            messages: {
                                required: "The @Html.DisplayNameFor(t => t.DatabaseName) field is required.",

                            }

                        });

                } else if (dbProvider === 4 || dbProvider === 5) {

                    //PostgreSQL or MySQL

                    $('#fldServerName').show();

                    $('#fldDatabaseName').show();

                    $('#fldDBUserName').show();

                    $('#fldDBPassword').show();


                    $inputServerName.rules("add",
                        {
                            required: true,

                            messages: {
                                required: "The @Html.DisplayNameFor(t => t.ServerName) field is required.",

                            }

                        });


                    $inputDatabaseName.rules("add",
                        {
                            required: true,

                            messages: {
                                required: "The @Html.DisplayNameFor(t => t.DatabaseName) field is required.",

                            }

                        });


                    $inputDBUserName.rules("add",
                        {
                            required: true,

                            messages: {
                                required: "The @Html.DisplayNameFor(t => t.DBUserName) field is required.",

                            }

                        });


                    $inputDBPassword.rules("add",
                        {
                            required: true,

                            messages: {
                                required: "The @Html.DisplayNameFor(t => t.DBPassword) field is required.",

                            }

                        });


                }


            }


            function formSubmit(event) {

                event.preventDefault();


                var $form = $(this),

                    url = $form.attr('action'),

                    fromData = $form.serialize(),

                    formMethod = $form.attr('method').toUpperCase(),

                    result = $form.validate(),

                    hasError = Object.keys(result.invalid).length > 0;


                if (!hasError) {

                    //$('.progress-overlay').removeClass('hide');
                    $installForm .hide();
                    $installProgressContainer.show();
                    var request = $.ajax({
                        type: formMethod,
                        url: url,
                        data: fromData, // serializes the form's elements.
                        headers: {
                            IsAjaxRequest: true
                        }
                    });


                    request.done(function(data, textStatus, jqXHR) {

                        var restartRequest = $.ajax({
                            type: formMethod,

                            url: '/api/application/restart',

                            data: fromData, // serializes the form's elements.

                            headers: {
                                IsAjaxRequest: true
                            }
                        });

                        setTimeout(function () {
                            window.location.href = '/';
                        }, 5000);

                    });


                    request.fail(function(data, textStatus, errorThrown) {
                        $alertRow.show();
                        console.log(data); // show response from the server.
                        $('.error-summary').text(data.responseText);
                        $('.progress-overlay').addClass('hide');

                    });

                }
                return false;
            }


            function initSignalR() {

                var connection = new signalR.HubConnectionBuilder()
                    .withUrl("/appHub")
                    .build();

                connection.on("OnUpdateInstallLog", onMessageReceived);

                connection.start().then(function () {
                    console.log('connected started');
                }).catch(function (err) {
                    return console.error(err.toString());
                });

            }

        }());


        function onMessageReceived(message) {
            const msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
            const $stepItem = $('<li></li>');
            const $inProgressIcon = $('.feather-chevron-right').first().clone();
            const $doneIcon = $('.feather-check-square').first().clone();
            const $messageContent = $('<span></span>');
            $messageContent.append(message);

            $('#installSteps li svg.feather').remove();
            $doneIcon.insertBefore('#installSteps li span');

            $stepItem.append($inProgressIcon);
            $stepItem.append($messageContent);

            $('#installSteps').append($stepItem);
        }

    </script>

}

