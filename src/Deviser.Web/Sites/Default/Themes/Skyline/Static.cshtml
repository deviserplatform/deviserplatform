@inject IScopeService scopeService
@using System.Security.Claims
@using Deviser.Core.Library.TagHelpers;
@using Deviser.Core.Library;
@using Deviser.Core.Library.Services;
@using Deviser.Core.Common;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var pageContext = scopeService.PageContext;
}

<nav class="navbar navbar-default navbar-fixed-top">
    <div class="container">
        <div>
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header page-scroll">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="@pageContext.HomePageFullUrl">
                    <img src="/_content/Deviser.Web/images/DeviserLogoDark.svg" onerror="this.src='/_content/Deviser.Web/images/DeviserLogoDark.png'; this.onerror=null;" alt="DEVISER">
                    @*<img src="/_content/Deviser.Web/images/DeviserLogoDark.png" alt="DEVISER">*@
                </a>
            </div>

            <div class="header-top pull-right clearfix">
                <ul class="login pull-right">
                    @await Html.PartialAsync("_LoginPartial")

                </ul>
                <ul class="language-switcher pull-right">
                    @await Component.InvokeAsync("LanguageSwitcher")
                </ul>
            </div>

            <!-- Collect the nav links, forms, and other content for toggling -->
            <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul dev-nav="SiteMain" dev-nav-page="PublicOnly" class="nav navbar-nav navbar-right"></ul>
            </div>
            <!-- /.navbar-collapse -->
        </div>

    </div>
    <!-- /.container-fluid -->
</nav>



@RenderBody()

@section Scripts{
    @RenderSection("scripts", required: false)
}
