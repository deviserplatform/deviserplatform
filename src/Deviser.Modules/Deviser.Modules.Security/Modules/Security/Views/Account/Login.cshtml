@using System.Collections.Generic
@using System.Linq
@using Deviser.Core.Common
@using Microsoft.AspNetCore.Http
@*@using Microsoft.AspNetCore.Http.Authentication*@
@using Deviser.Core.Library.Services;
@using User = Deviser.Core.Data.Entities.User

@model Deviser.Modules.Security.Models.AccountViewModels.LoginViewModel
@inject SignInManager<User> SignInManager
@inject INavigation navigation
@inject IScopeService scopeService;
@{
    ViewData["Title"] = "Log in";
    Layout = null;
    var pageContext = scopeService.PageContext;
}


<div class="security-container">
    <div class="row d-flex justify-content-center align-items-stretch">
        <div class="col-md-5 login-left">
            <section>
                <form dev-module="Security" dev-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="dev-form form-horizontal">
                    <h2>@ViewData["Title"]</h2>
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div class="form-group">
                        <label asp-for="Email"></label>
                        <input asp-for="Email" class="form-control" />
                        <span asp-validation-for="Email" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="Password"></label>
                        <input asp-for="Password" class="form-control" />
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <div class="checkbox">
                            <label asp-for="RememberMe">
                                <input asp-for="RememberMe" />
                                @Html.DisplayNameFor(m => m.RememberMe)
                            </label>
                        </div>
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Log in</button>
                    </div>
                </form>
            </section>
        </div>

        @if (scopeService.PageContext.SiteSettingInfo.RegistrationEnabled)
        {
            <div class="col-md-5 login-right">
                <section>
                    @{
                        var loginProviders = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToList();
                        if (loginProviders.Count == 0)
                        {
                            <div>
                                <p>
                                    There are no external authentication services configured. See <a href="https://www.deviser.io/docs/guide/admin/site-settings.html#security">this article</a> to enable authentication using external services.
                                </p>
                            </div>
                        }
                        else
                        {
                            <form dev-module="Security" dev-action="ExternalLogin" dev-route-returnurl="@ViewData["ReturnUrl"]" method="post" class="form-horizontal">
                                <div class="d-flex flex-column">
                                    <div class="p-2">
                                        <p>If you do not have an account yet, click the button below to create your account.</p>
                                        <a class="btn btn-secondary" href="@navigation.NavigateUrl(pageContext.SiteSettingInfo.RegistrationPageId)">Create Account</a>
                                    </div>
                                    <div class="p-2 text-center">
                                        OR
                                    </div>
                                    @foreach (var provider in loginProviders.OrderBy(lp => lp.Name).ToList())
                                    {
                                        <div class="p-2">
                                            <button type="submit" class="btn btn-secondary @provider.Name.ToLower()" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.Name</button>
                                        </div>
                                    }
                                </div>
                            </form>
                        }
                    }
                </section>
            </div>
        }

    </div>
    <div class="row justify-content-center forget-password">
        <div class="col-md-10">
            <p class="text-center">Could not access your account? Did you <a dev-module="Security" dev-action="ForgotPassword">Forgot your password?</a></p>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
